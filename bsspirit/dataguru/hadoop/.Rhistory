x
cat2<-function(a) x<-paste(x,a)
fix(cat2)
ddply(dat,.(v1),cat2)
library(plyr)
ddply(dat,.(v1),cat2)
cat2<-function(a) x<-cat(x,a)
ddply(dat,.(v1),cat2)
x
cat2<-function(a) x<-paste(x,a)
library(stringr)
cat2<-function(a) x<-paste(x,a)
ddply(dat,.(v1),str_c(cat2))
alply(ozone, 3, quantile)
alply(ozone, 3, function(x) table(round(x)))
mtcars[with(mtcars, order(cyl, disp)), ]
arrange(mtcars, cyl, disp)
arrange(mtcars, cyl, desc(disp))
head(arrange(mtcars, cyl, desc(disp)))
?order
head(mtcars[order(mtcars$cyl,-mtcats$disp)])
mtcars$cyl
head(mtcars[order(mtcars$cyl,-mtcars$disp)])
head(mtcars[order(mtcars$cyl,-mtcars$disp),])
system.time(head(mtcars[order(mtcars$cyl,-mtcars$disp),]))
system.time(head(arrange(mtcars, cyl, desc(disp))))
system.time(head(arrange(mtcars, cyl, desc(disp))))
system.time(head(arrange(mtcars, cyl, desc(disp))))
system.time(head(mtcars[order(mtcars$cyl,-mtcars$disp),]))
as.quoted(c("a", "b", "log(d)"))
baberuth <- subset(baseball, id == "ruthba01")
baberuth
head(baberuth)
mutate
?mutate
mutate(airquality, Ozone = -Ozone)
head(mutate(airquality, Ozone = -Ozone))
head(airquality)
mutate(airquality, Temp = (Temp - 32) / 1.8, OzT = Ozone / Temp)
head(mutate(airquality, Temp = (Temp - 32) / 1.8, OzT = Ozone / Temp))
count(baseball, "id")
head(count(baseball, "id"))
head(baseball)
count(baseball, "id", "g")
head(count(baseball, "id", "g"))
?count
l_ply(1:100, identity, .progress = "text")
daply(baseball, .(year), nrow)
daply(baseball[, c(2, 6:9)], .(year), colwise(mean))
head(daply(baseball[, c(2, 6:9)], .(year), colwise(mean)))
desc(1:10)
desc(1:2)
desc
?desc
desc(factor(letters))
first_day <- seq(as.Date("1910/1/1"), as.Date("1920/1/1"), "years")
first_day
desc(first_day)
setwd("D:/dataguru/R/test")
strings <- c("Home: 219 733 8965. Work: 229-293-8753 ",
"banana pear apple", "595 794 7569 / 387 287 6718")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
strings
phone
str_extract_all(strings, phone)
library(stringr)
str_extract_all(strings, phone)
strings
phone
str_extract_all(strings, phone)
str_match_all(strings, phone)
str_pad("hadley", 30, "left")
str_pad("hadley", 30, "right"),
str_pad("hadley", 30, "right")
rbind(
str_pad("hadley", 30, "left"),
str_pad("hadley", 30, "right"),
str_pad("hadley", 30, "both")
)
str_pad("hadley", 3)
str_pad("hadley", 3)
str_pad("hadley", 3, 'left')
str_pad("hadley", 3, 'right')
str_pad("hadley", 10, 'left')
fruits <- c("one apple", "two pears", "three bananas")
fruits
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "\\1")
str_replace_all(fruits, "[aeiou]", c("1","2","3"))
str_replace_all(fruits, "[aeiou]", c("1","2"
))
str_replace_all(fruits, "[aeiou]", c("1","2"))
str_replace_all(fruits, "[aeiou]", c("1","2","3"))
str_split(fruits, " and ")
fruits
str_split(fruits, " and ", n = 5)
str_split(fruits, " and ", n = 2)
str_split_fixed(fruits, " and ", 3)
str_split_fixed(fruits, " and ", 4)
str_split_fixed(fruits, " and ", 2)
str_split_fixed(fruits, " and ")
str_split_fixed(fruits, " and ",n=1)
hw <- "Hadley Wickham"
hw
str_sub(hw, 1, 6)
str_sub(hw, 1, end=6)
str_sub(hw, 1, end=14)
str_sub(hw, -1)
str_sub(hw, -1, -10)
str_sub(hw, -10, -1)
str_trim(" String with trailing and leading white space\t")
str_trim("\n\nString with trailing and leading white space\n\n")
thanks <- str_c(readLines(R.home("doc/THANKS")), collapse = "\n")
thanks
thanks <- word(thanks, 1, 3, fixed("\n\n"))
thanks
word
word
thanks <- word(thanks)
thanks
thanks <- word(thanks, sep=fixed("\n\n"))
thanks
thanks <- word(thanks, 1,3 sep=fixed("\n\n"))
thanks <- word(thanks, 1,3, sep=fixed("\n\n"))
thanks <- word(thanks, 1,3, fixed("\n\n"))
catthanks <- word(thanks, 1, 3, fixed("\n\n"))
thanks <- word(thanks, 1, 3, fixed("\n\n"))
thanks <- str_c(readLines(R.home("doc/THANKS")), collapse = "\n")
thanks
readLines
?readLines
sentences <- c("Jane saw a cat", "Jane sat down")
sentences
word(sentences, 1)
word(sentences, 2)
word(sentences, -1)
word(sentences, 2,-1)
word(sentences[1], 1:3,-1)
str <- ’abc.def..123.4568.999’
str <- 'abc.def..123.4568.999'
str
word(str, 1, sep = fixed(’..’))
word(str, 1, sep = fixed('..'))
word(str, 2, sep = fixed(’..’))
word(str, 2, sep = fixed('..'))
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
install.packages("reshape2")
aqm
library("reshape2")
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
aqm
head(aqm)
acast(aqm,day~month~variable)
acast(aqm, month ~ variable, mean)
acast(chick_m, time ~ diet, length)
x <- c("a_1", "a_2", "b_2", "c_3")
vars <- colsplit(x, "_", c("trt", "time"))
vars
x
str(vars)
str
str()
?str
a <- array(c(1:23, NA), c(2,3,4))
a
melt(a)
a
head(a)
a
melt(a)
melt(a, na.rm = TRUE)
melt(a, varnames=c("X","Y","Z"))
a <- as.list(c(1:4, NA))
a
melt(a)
names(a) <- letters[1:4]
a
melt(a)
a <- list(matrix(1:4, ncol=2), array(1:27, c(3,3,3)))
a
melt(a)
setwd("D:/dataguru/hadoop")
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=n));
n<-4
a<-0.85
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=n));
S0
s
S<-matrix(c(0,1/3,1/3,1/3,0,0,1/2,1/2,0,0,0,1,0,1,0,0),nrow=n)
S
S[1:2,]
S[,1:2]
A<-S[,1:2]
B<-S[,3:4]
A
B
q00<-{{1},{1}}
q00<-matrix(rep(1),nrow=2)
q00
A%*%q00
B%*%q00
q00<-q10<-matrix(rep(1),nrow=2)
B%*%q00
q0<-A%*%q00
q1<-B%*%q01
q0<-A%*%q00
q1<-B%*%q00
q1
q0+q1
q<-q0+q1
q[1:2,]
A%*%q[1:2,]
q00
rm(list=ls())
S<-matrix(c(0,1/3,1/3,1/3,0,0,1/2,1/2,0,0,0,1,0,1,0,0),nrow=n)
Sn<-4
a<-0.85
S<-matrix(c(0,1/3,1/3,1/3,0,0,1/2,1/2,0,0,0,1,0,1,0,0),nrow=n)
n<-4
a<-0.85
S<-matrix(c(0,1/3,1/3,1/3,0,0,1/2,1/2,0,0,0,1,0,1,0,0),nrow=n)
S
A<-S[,1:2]
B<-S[,3:4]
A
B
qa<-matrix(rep(1),2)
qa
q<-matrix(rep(1),4)
q
qa<-q[,1:2]
qa<-q[1:2,]
qa
qa<-as.matrix(q[1:2,])
qa
qb<-as.matrix(q[3:4,])
qb
A%*%qa
A%*%qa + B%*%qb
A%*%qa+B%*%qb
source("mapReduce.R")
source("mapReduce.R")
source("mapReduce.R")
U<-matrix(rep(1,16),nrow=n)
U
U[1:2,]
Ga<-a*A+(1-a)/n*U[,1:2]
ga
Ga
Gb<-a*B+(1-a)/n*U[,3:4]
Gb
source("mapReduce.R")
map<-function(S,node='a'){
if(node=='a') S[,1:2] else S[,3:4]
}
A<-map(S,'a');
A
A<-map(S,'a');
B<-map(S,'b');
A
B
A
nrow(A)
ncol(A)
ncol(A)
A*0
A*0+1
map<-function(S,node='a'){
if(node=='a') S[,1:2] else S[,3:4]
}
reduce<-function(A,B,a=0.85){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:100){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
q
}
reduce(A,B)
reduce<-function(A,B,a=0.85){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:100){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
q/sum(q)
}
reduce(A,B)
reduce<-function(A,B,a=0.85){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:100){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
reduce(A,B)
S0
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=n));
S0
apply(S0,2,sum)
S0/apply(S0,2,sum)
apply(S0,2,sum)
apply(S0,2,sum)
apply(S0,2,function(x) x/apply(S0,2,sum))
S0
apply(S0,1,function(x) x/apply(S0,2,sum))
?apply
apply(S0,2,sum)
apply(S0,1, function(x) x/apply(S0,2,sum))
apply(S0,2, function(x) x/apply(S0,2,sum))
apply(S0,2, function(x) x
)
apply(S0,2, function(x) x/sum(x))
map<-function(S0,node='a'){
S<-apply(S0,2, function(x) x/sum(x))
if(node=='a') S[,1:2] else S[,3:4]
}
S0
map(S0)
map<-function(S0,node='a'){
S<-apply(S0,2, function(x) x/sum(x))
if(node=='a') S[,1:2] else S[,3:4]
}
reduce<-function(A,B,a=0.85){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:100){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
A<-map(S,'a');
B<-map(S,'b');
A
B
reduce(A,B)
S
S0
A<-map(S0,'a');
B<-map(S0,'b');
A
A<-map(S,'a');
A
A
rm(list=ls())
map<-function(S0,node='a'){
S<-apply(S0,2, function(x) x/sum(x))
if(node=='a') S[,1:2] else S[,3:4]
}
reduce<-function(A,B,a=0.85,niter=100){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
A<-map(S0,'a');
B<-map(S0,'b');
reduce(A,B)
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=n));
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=4));
A<-map(S0,'a');
B<-map(S0,'b');
reduce(A,B)
A
B
A
map<-function(S0,node='a'){
S<-apply(S0,2, function(x) x/sum(x))
if(node=='a') S[,1:2] else S[,3:4]
}
reduce<-function(A,B,n,a=0.85,niter=100){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
n=4
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=n));
A<-map(S0,'a');
B<-map(S0,'b');
reduce(A,B,n)
A<-map(S0,'a');
A
B<-map(S0,'b');
B
reduce(A,B,n)
reduce<-function(A,B,n,a=0.85,niter=100){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
reduce(A,B,n)
reduce<-function(A,B,a=0.85,niter=100){
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:2,])
qb<-as.matrix(q[3:4,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
reduce(A,B)
q
q<-rep(1,4)
q
reduce<-function(A,B,a=0.85,niter=100){
n<-nrow(A)
q<-rep(1,n)
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:ncol(A),])
qb<-as.matrix(q[ncol(A)+1:n,])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
reduce(A,B)
ncol(A)
nrow(A)
n<-nrow(A)
n
q<-rep(1,n)
q
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
a<-0.85
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
Ga
Gb
q
q[1]
q[1:2]
qa<-as.matrix(q[1:ncol(A)])
qb<-as.matrix(q[ncol(A)+1:n])
qa
qb
q
q[ncol(A)+1:n]
ncol(A)
q[3:4]
q[(ncol(A)+1):n]
reduce<-function(A,B,a=0.85,niter=100){
n<-nrow(A)
q<-rep(1,n)
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:ncol(A)])
qb<-as.matrix(q[(ncol(A)+1):n])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
reduce(A,B)
rm(list=ls())
map<-function(S0,node='a'){
S<-apply(S0,2, function(x) x/sum(x))
if(node=='a') S[,1:2] else S[,3:4]
}
reduce<-function(A,B,a=0.85,niter=100){
n<-nrow(A)
q<-rep(1,n)
Ga<-a*A+(1-a)/n*(A*0+1)
Gb<-a*B+(1-a)/n*(B*0+1)
for(i in 1:niter){
qa<-as.matrix(q[1:ncol(A)])
qb<-as.matrix(q[(ncol(A)+1):n])
q<-Ga%*%qa+Gb%*%qb
}
as.vector(q/sum(q))
}
S0<-t(matrix(c(0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0),nrow=4));
A<-map(S0,'a');
B<-map(S0,'b');
reduce(A,B)
options(width=800)
A
A=1
A
B
B[B!=1]=1
B
eigen
？eigen
?eigen
